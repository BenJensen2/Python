{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red91\green225\blue239;
\red0\green0\blue0;\red93\green235\blue68;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84706\cname labelColor;\cssrgb\c100000\c100000\c100000;\cssrgb\c41199\c90175\c95161;
\cssrgb\c0\c0\c0;\cssrgb\c41609\c91813\c33326;}
\margl1440\margr1440\vieww21940\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 >>> from books_authors_app.models import *\
>>> books.objects.create(title="C Sharp",desc="multi-paradigm programming language")\
<books: books object (1)>\
>>> books.objects.create(title="Java",desc="general purpose programming language")\
<books: books object (2)>\
>>> books.objects.create(title="Python",desc="interpreted, high-level, general-purpose programming language")\
<books: books object (3)>\
>>> books.objects.create(title="PHP",desc="popular general-purpose scripting language, especially suited for web development")\
<books: books object (4)>\
>>> books.objects.create(title="Ruby",desc="interpreted, high-level, general-purpose programming language")\
<books: books object (5)>\
>>> authors.objects.create(first_name="Jane",last_name="Austen")\
<authors: authors object (1)>\
>>> authors.objects.create(first_name="Emily",last_name="Dickinson")\
<authors: authors object (2)>\
>>> authors.objects.create(first_name="Fyodor",last_name="Dostoevsky")\
<authors: authors object (3)>\
>>> authors.objects.create(first_name="William",last_name="Shakespeare")\
<authors: authors object (4)>\
>>> authors.objects.create(first_name="Lau",last_name="Tzu")\
<authors: authors object (5)>\
>>> exit()\
\
(djangoPy3Env) ben@Bens-MBP books_authors_proj % python manage.py makemigrations\
You are trying to add a non-nullable field 'notes' to authors without a default; we can't do that (the database needs something to populate existing rows).\
Please select a fix:\
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\
 2) Quit, and let me add a default in models.py\
Select an option: 1\
Please enter the default value now, as valid Python\
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now\
Type 'exit' to exit this prompt\
\
>>> 'This is real'\

\f1\b \cf4 Migrations for 'books_authors_app':
\f0\b0 \cf2 \
  
\f1\b \cf5 books_authors_app/migrations/0002_authors_notes.py
\f0\b0 \cf2 \
    - Add field notes to authors\
\
(djangoPy3Env) ben@Bens-MBP books_authors_proj % python manage.py migrate\

\f1\b \cf4 Operations to perform:
\f0\b0 \cf2 \

\f1\b \cf5   Apply all migrations: 
\f0\b0 \cf2 admin, auth, books_authors_app, contenttypes, sessions\

\f1\b \cf4 Running migrations:
\f0\b0 \cf2 \
  Applying books_authors_app.0002_authors_notes...
\f1\b \cf6  OK
\f0\b0 \cf2 \
\
(djangoPy3Env) ben@Bens-MBP books_authors_proj % python manage.py shell\
Python 3.8.2 (v3.8.2:7b3ab5921f, Feb 24 2020, 17:52:18) \
[Clang 6.0 (clang-600.0.57)] on darwin\
Type "help", "copyright", "credits" or "license" for more information.\
(InteractiveConsole)\
\
>>> from books_authors_app.models import *\
\
>>> books.objects.get(title='C Sharp').title='C#'\
\
>>> authors.objects.get(id=4).first_name='Bill'\
\
>>> a1=authors.objects.get(id=1)\
>>> a2=authors.objects.get(id=2)\
>>> a3=authors.objects.get(id=3)\
>>> a4=authors.objects.get(id=4)\
>>> a5=authors.objects.get(id=5)\
>>> b1=books.objects.get(id=1)\
>>> b2=books.objects.get(id=2)\
>>> b3=books.objects.get(id=3)\
>>> b4=books.objects.get(id=4)\
>>> b5=books.objects.get(id=5)\
\
>>> a1.authored_books.add(b1,b2)\
\
>>> a2.authored_books.add(b1,b2,b3)\
\
>>> a3.authored_books.add(b1,b2,b3,b4)\
\
>>> a4.authored_books.add(b1,b2,b3,b4,b5)\
\
>>> b3.authors_included.all()\
<QuerySet [<authors: authors object (2)>, <authors: authors object (3)>, <authors: authors object (4)>]>\
\
>>> b3.authors_included.remove(a1)\
\
>>> b2.authors_included.add(a5)\
\
>>> a3.authored_books.all()\
<QuerySet [<books: books object (1)>, <books: books object (2)>, <books: books object (3)>, <books: books object (4)>]>\
\
>>> b5.authors_included.all()\
<QuerySet [<authors: authors object (4)>]>\
>>> exit()\
(djangoPy3Env) ben@Bens-MBP books_authors_proj % }